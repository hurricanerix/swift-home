# -*- mode: ruby -*-
# vi: set ft=ruby :

# Copyright 2015 Richard Hawkins
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

VAGRANTFILE_API_VERSION = "2"

disk_sdb1 = 'tmp/saio-home-sdb1.vdi'
disk_sdc1 = 'tmp/saio-home-sdc1.vdi'
disk_sdd1 = 'tmp/saio-home-sdd1.vdi'
disk_sde1 = 'tmp/saio-home-sde1.vdi'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box_url = "http://files.vagrantup.com/precise64.box"
  config.vm.box = "precise64"
  config.vm.hostname = "vagrant-swift-home"
  #config.ssh.username = "swift"
  #config.ssh.password = "swift"

  config.vm.network :forwarded_port, guest: 8080, host: 8080

  config.vm.synced_folder "../salt/roots", "/srv/salt/", :owner=> 'vagrant', :group=>'vagrant', :mount_options => ['dmode=775', 'fmode=775']

  config.vm.provider "virtualbox" do | v |
    v.name = "swift-home"
    v.memory = 1024
    v.cpus = 2

    unless File.exist?(disk_sdb1)
      v.customize ['createhd', '--filename', disk_sdb1, '--size', 50]
    end
    unless File.exist?(disk_sdc1)
      v.customize ['createhd', '--filename', disk_sdc1, '--size', 50]
    end
    unless File.exist?(disk_sdd1)
      v.customize ['createhd', '--filename', disk_sdd1, '--size', 50]
    end
    unless File.exist?(disk_sde1)
      v.customize ['createhd', '--filename', disk_sde1, '--size', 50]
    end
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk_sdb1]
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', disk_sdc1]
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 3, '--device', 0, '--type', 'hdd', '--medium', disk_sdd1]
    v.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 4, '--device', 0, '--type', 'hdd', '--medium', disk_sde1]
  end

  config.vm.provision :salt do |salt|
    salt.minion_config = "../salt/minion"
    salt.run_highstate = true
  end
end
