#!/usr/bin/env python
# Copyright 2015 Richard Hawkins
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import subprocess


def run_cmd(cmd, cmd_input=None, ignore_error=False):
    process=subprocess.Popen(cmd,
                             stdin=subprocess.PIPE,
                             stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
    out, err = process.communicate(input=cmd_input)
    if err and not ignore_error:
        raise Exception(err)
    return out


def is_mounted(device):
    output = run_cmd(['grep', device, '/proc/mounts'])
    if output:
        return True
    return False


def main():
    parser = argparse.ArgumentParser(description='Disk Partition/Format-er')
    parser.add_argument('--number', type=int, default=0)
    parser.add_argument('--force', '-f', action='store_true', default=False)
    parser.add_argument('device', type=str)

    args = parser.parse_args()
    device = args.device
    drive_num = args.number

    if drive_num == 0:
        drive_index = {'b': 1, 'c': 2, 'd': 3, 'e': 4}
        drive_num = drive_index.get(args.device[-1:])
        if not drive_num:
            raise Exception('Could not determine drive number from device.')

    # Check device for existing partitions
    cmd = ['sfdisk',  '-l', device]
    out = run_cmd(cmd, ignore_error=True)
    partition_exists = '{}1'.format(device) in out

    if partition_exists and not args.force:
        raise Exception('Partition exists, to continue please use --force')

    if partition_exists:
        print 'Partition exists, skipping partitioning step'
    else:
        cmd = ['fdisk', device]
        cmd_input = 'n\np\n1\n\n\nw\n'
        out = run_cmd(cmd, cmd_input=cmd_input)

    mounted = is_mounted(device)
    if mounted:
        cmd = ['umount', '{}1'.format(device)]
        out = run_cmd(cmd)

    cmd = ['mkfs.xfs', '-f', '{}1'.format(device)]
    out = run_cmd(cmd)

    # TODO: Label not occouring
    cmd = ['xfs_admin', '-L', 'SWIFT_DISK{}'.format(drive_num),
           '{}1'.format(device)]
    out = run_cmd(cmd)

    print 'Device {} setup complete:'.format(device)
    print '\tAssigned drive number: {}'.format(drive_num)


if __name__ == '__main__':
    main()
